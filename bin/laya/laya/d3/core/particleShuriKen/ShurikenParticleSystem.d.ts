import { ShuriKenParticle3D } from "./ShuriKenParticle3D";
import { GeometryElement } from "../GeometryElement";
import { IClone } from "../IClone";
import { ColorOverLifetime } from "./module/ColorOverLifetime";
import { Emission } from "./module/Emission";
import { GradientDataNumber } from "./module/GradientDataNumber";
import { RotationOverLifetime } from "./module/RotationOverLifetime";
import { SizeOverLifetime } from "./module/SizeOverLifetime";
import { TextureSheetAnimation } from "./module/TextureSheetAnimation";
import { VelocityOverLifetime } from "./module/VelocityOverLifetime";
import { BaseShape } from "./module/shape/BaseShape";
import { RenderContext3D } from "../render/RenderContext3D";
import { IndexBuffer3D } from "../../graphics/IndexBuffer3D";
import { VertexBuffer3D } from "../../graphics/VertexBuffer3D";
import { Vector3 } from "../../math/Vector3";
import { Vector4 } from "../../math/Vector4";
export declare class ShurikenParticleSystem extends GeometryElement implements IClone {
    duration: number;
    looping: boolean;
    prewarm: boolean;
    startDelayType: number;
    startDelay: number;
    startDelayMin: number;
    startDelayMax: number;
    startSpeedType: number;
    startSpeedConstant: number;
    startSpeedConstantMin: number;
    startSpeedConstantMax: number;
    threeDStartSize: boolean;
    startSizeType: number;
    startSizeConstant: number;
    startSizeConstantSeparate: Vector3;
    startSizeConstantMin: number;
    startSizeConstantMax: number;
    startSizeConstantMinSeparate: Vector3;
    startSizeConstantMaxSeparate: Vector3;
    threeDStartRotation: boolean;
    startRotationType: number;
    startRotationConstant: number;
    startRotationConstantSeparate: Vector3;
    startRotationConstantMin: number;
    startRotationConstantMax: number;
    startRotationConstantMinSeparate: Vector3;
    startRotationConstantMaxSeparate: Vector3;
    randomizeRotationDirection: number;
    startColorType: number;
    startColorConstant: Vector4;
    startColorConstantMin: Vector4;
    startColorConstantMax: Vector4;
    gravityModifier: number;
    simulationSpace: number;
    scaleMode: number;
    playOnAwake: boolean;
    randomSeed: Uint32Array;
    autoRandomSeed: boolean;
    isPerformanceMode: boolean;
    maxParticles: number;
    readonly emission: Emission;
    readonly aliveParticleCount: number;
    readonly emissionTime: number;
    shape: BaseShape;
    readonly isAlive: boolean;
    readonly isEmitting: boolean;
    readonly isPlaying: boolean;
    readonly isPaused: boolean;
    startLifetimeType: number;
    startLifetimeConstant: number;
    startLifeTimeGradient: GradientDataNumber;
    startLifetimeConstantMin: number;
    startLifetimeConstantMax: number;
    startLifeTimeGradientMin: GradientDataNumber;
    startLifeTimeGradientMax: GradientDataNumber;
    velocityOverLifetime: VelocityOverLifetime;
    colorOverLifetime: ColorOverLifetime;
    sizeOverLifetime: SizeOverLifetime;
    rotationOverLifetime: RotationOverLifetime;
    textureSheetAnimation: TextureSheetAnimation;
    _getVertexBuffer(index?: number): VertexBuffer3D;
    _getIndexBuffer(): IndexBuffer3D;
    constructor(owner: ShuriKenParticle3D);
    emit(time: number): boolean;
    addParticle(position: Vector3, direction: Vector3, time: number): boolean;
    addNewParticlesToVertexBuffer(): void;
    _getType(): number;
    _prepareRender(state: RenderContext3D): boolean;
    play(): void;
    pause(): void;
    simulate(time: number, restart?: boolean): void;
    stop(): void;
    cloneTo(destObject: any): void;
    clone(): any;
}
