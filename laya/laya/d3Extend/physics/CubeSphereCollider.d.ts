import { CubePhysicsCompnent } from "./CubePhysicsCompnent";
import { CubeBoxCollider } from "./CubeBoxCollider";
import { CubeEditCubeCollider } from "./CubeEditCubeCollider";
import { PixelLineSprite3D } from "laya/d3/core/pixelLine/PixelLineSprite3D";
import { BoundSphere } from "laya/d3/math/BoundSphere";
import { Color } from "laya/d3/math/Color";
import { Vector3 } from "laya/d3/math/Vector3";
export declare class CubeSphereCollider extends CubePhysicsCompnent {
    center: Vector3;
    radius: number;
    _boundSphere: BoundSphere;
    private _primitPosition;
    private _disparity;
    private _primitscale;
    pixelline: PixelLineSprite3D;
    primitradius: number;
    constructor();
    onAwake(): void;
    onUpdate(): void;
    updataBoundSphere(): void;
    isCollision(other: CubePhysicsCompnent): number;
    sphereAndShpere(other: CubeSphereCollider): number;
    sphereAndBox(other: CubeBoxCollider): number;
    _showline(): void;
    _noShowLine(): void;
    sphereAndCube(other: CubeEditCubeCollider): number;
    private cubePoint;
    OneCubeIsCollider(cubeCollider: CubeEditCubeCollider, x: number, y: number, z: number): number;
    private vec1;
    private vec2;
    drawBound(color?: Color): void;
    resizeBound(): void;
    onDestroy(): void;
    onDisable(): void;
    onEnable(): void;
    clearLine(): void;
}
