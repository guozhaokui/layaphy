import { Sprite } from "../display/Sprite";
import { Stage } from "../display/Stage";
export declare class MouseManager {
    static instance: MouseManager;
    static enabled: boolean;
    static multiTouchEnabled: boolean;
    mouseX: number;
    mouseY: number;
    disableMouseEvent: boolean;
    mouseDownTime: number;
    mouseMoveAccuracy: number;
    private static _isTouchRespond;
    private _stage;
    private _captureSp;
    private _captureChain;
    private _captureExlusiveMode;
    private _hitCaputreSp;
    private _point;
    private _rect;
    private _target;
    private _lastMoveTimer;
    private _isLeftMouse;
    private _prePoint;
    private _touchIDs;
    private _curTouchID;
    private _id;
    private static _isFirstTouch;
    __init__(stage: Stage, canvas: any): void;
    private _tTouchID;
    private initEvent;
    private checkMouseWheel;
    private onMouseMove;
    private onMouseDown;
    private onMouseUp;
    private check;
    private hitTest;
    private _checkAllBaseUI;
    check3DUI(mousex: number, mousey: number, callback: Function): boolean;
    handleExclusiveCapture(mousex: number, mousey: number, callback: Function): boolean;
    handleCapture(mousex: number, mousey: number, callback: Function): boolean;
    runEvent(evt: any): void;
    setCapture(sp: Sprite, exclusive?: boolean): void;
    releaseCapture(): void;
}
