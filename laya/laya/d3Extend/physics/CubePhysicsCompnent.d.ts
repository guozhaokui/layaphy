import { RenderableSprite3D } from "laya/d3/core/RenderableSprite3D";
import { BoundsOctree } from "laya/d3/core/scene/BoundsOctree";
import { BoundsOctreeNode } from "laya/d3/core/scene/BoundsOctreeNode";
import { IOctreeObject } from "laya/d3/core/scene/IOctreeObject";
import { BoundBox } from "laya/d3/math/BoundBox";
import { BoundSphere } from "laya/d3/math/BoundSphere";
import { Vector3 } from "laya/d3/math/Vector3";
import { Script } from "laya/components/Script";
import { Mesh } from "laya/d3/resource/models/Mesh";
import { Node } from "laya/display/Node";
import { Sprite3D } from "laya/d3/core/Sprite3D";
import { Matrix4x4 } from "laya/d3/math/Matrix4x4";
export declare class CubePhysicsCompnent extends Script implements IOctreeObject {
    isStatic: boolean;
    static TYPE_BOX: number;
    static TYPE_SPHERE: number;
    static TYPE_CUBESPRIT3D: number;
    static centerSprite: Vector3;
    static extents: Vector3;
    static boundBox: BoundBox;
    static _octree: BoundsOctree;
    onlyID: number;
    protected _sprite3D: Sprite3D;
    private isRigebody;
    type: number;
    protected _localmatrix4x4: Matrix4x4;
    protected _worldMatrix4x4: Matrix4x4;
    _boundBox: BoundBox;
    _boundSpheres: BoundSphere;
    private static _tempVectormax;
    private static _tempVectormin;
    _octreeNode: BoundsOctreeNode;
    _indexInOctreeMotionList: number;
    constructor();
    isCollision(other: CubePhysicsCompnent): number;
    static updataBoundBox(): void;
    static findAllMesh(sprite: Node, Mesharray: Mesh[], renderspriteArray: RenderableSprite3D[]): void;
    _getOctreeNode(): BoundsOctreeNode;
    _setOctreeNode(value: BoundsOctreeNode): void;
    _getIndexInMotionList(): number;
    _setIndexInMotionList(value: number): void;
    readonly boundingSphere: BoundSphere;
    readonly boundingBox: BoundBox;
    static isBoundsCollision(Physics1: CubePhysicsCompnent, Physics2: CubePhysicsCompnent): boolean;
    onAwake(): void;
    onEnable(): void;
    onDisable(): void;
    onDestroy(): void;
}
