import { Sprite } from "../../../display/Sprite";
import { Context } from "../../../resource/Context";
import { ICreateResource } from "../../../resource/ICreateResource";
import { Texture2D } from "../../../resource/Texture2D";
import { Handler } from "../../../utils/Handler";
import { Timer } from "../../../utils/Timer";
import { ISubmit } from "../../../webgl/submit/ISubmit";
import { Input3D } from "../../Input3D";
import { Vector3 } from "../../math/Vector3";
import { PhysicsSimulation } from "../../physics/PhysicsSimulation";
import { SkyRenderer } from "../../resource/models/SkyRenderer";
import { TextureCube } from "../../resource/TextureCube";
import { ParallelSplitShadowMap } from "../../shadowMap/ParallelSplitShadowMap";
export declare class Scene3D extends Sprite implements ISubmit, ICreateResource {
    static HIERARCHY: string;
    static octreeCulling: boolean;
    static octreeInitialSize: number;
    static octreeInitialCenter: Vector3;
    static octreeMinNodeSize: number;
    static octreeLooseness: number;
    static REFLECTIONMODE_SKYBOX: number;
    static REFLECTIONMODE_CUSTOM: number;
    static FOGCOLOR: number;
    static FOGSTART: number;
    static FOGRANGE: number;
    static LIGHTDIRECTION: number;
    static LIGHTDIRCOLOR: number;
    static POINTLIGHTPOS: number;
    static POINTLIGHTRANGE: number;
    static POINTLIGHTATTENUATION: number;
    static POINTLIGHTCOLOR: number;
    static SPOTLIGHTPOS: number;
    static SPOTLIGHTDIRECTION: number;
    static SPOTLIGHTSPOTANGLE: number;
    static SPOTLIGHTRANGE: number;
    static SPOTLIGHTCOLOR: number;
    static SHADOWDISTANCE: number;
    static SHADOWLIGHTVIEWPROJECT: number;
    static SHADOWMAPPCFOFFSET: number;
    static SHADOWMAPTEXTURE1: number;
    static SHADOWMAPTEXTURE2: number;
    static SHADOWMAPTEXTURE3: number;
    static AMBIENTCOLOR: number;
    static REFLECTIONTEXTURE: number;
    static REFLETIONINTENSITY: number;
    static TIME: number;
    static ANGLEATTENUATIONTEXTURE: number;
    static RANGEATTENUATIONTEXTURE: number;
    static POINTLIGHTMATRIX: number;
    static SPOTLIGHTMATRIX: number;
    static load(url: string, complete: Handler): void;
    currentCreationLayer: number;
    enableLight: boolean;
    parallelSplitShadowMaps: ParallelSplitShadowMap[];
    private _time;
    readonly url: string;
    enableFog: boolean;
    fogColor: Vector3;
    fogStart: number;
    fogRange: number;
    ambientColor: Vector3;
    readonly skyRenderer: SkyRenderer;
    customReflection: TextureCube;
    reflectionIntensity: number;
    readonly physicsSimulation: PhysicsSimulation;
    reflectionMode: number;
    timer: Timer;
    readonly input: Input3D;
    constructor();
    _setCreateURL(url: string): void;
    _parse(data: any, spriteMap: any): void;
    protected _onActive(): void;
    protected _onInActive(): void;
    setlightmaps(value: Texture2D[]): void;
    getlightmaps(): Texture2D[];
    destroy(destroyChild?: boolean): void;
    render(ctx: Context, x: number, y: number): void;
    renderSubmit(): number;
    getRenderType(): number;
    releaseRender(): void;
    reUse(context: Context, pos: number): number;
}
