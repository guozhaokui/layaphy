import { HTMLElement } from "../dom/HTMLElement";
export declare class HTMLStyle {
    private static _CSSTOVALUE;
    private static _parseCSSRegExp;
    private static _inheritProps;
    static ALIGN_LEFT: string;
    static ALIGN_CENTER: string;
    static ALIGN_RIGHT: string;
    static VALIGN_TOP: string;
    static VALIGN_MIDDLE: string;
    static VALIGN_BOTTOM: string;
    static styleSheets: any;
    static ADDLAYOUTED: number;
    private static _PADDING;
    protected static _HEIGHT_SET: number;
    protected static _LINE_ELEMENT: number;
    protected static _NOWARP: number;
    protected static _WIDTHAUTO: number;
    protected static _BOLD: number;
    protected static _ITALIC: number;
    protected static _CSS_BLOCK: number;
    protected static _DISPLAY_NONE: number;
    protected static _ABSOLUTE: number;
    protected static _WIDTH_SET: number;
    protected static alignVDic: any;
    protected static align_Value: any;
    protected static vAlign_Value: any;
    protected static _ALIGN: number;
    protected static _VALIGN: number;
    fontSize: number;
    family: string;
    color: string;
    ower: HTMLElement;
    private _extendStyle;
    textDecoration: string;
    bgColor: string;
    borderColor: string;
    padding: any[];
    constructor();
    private _getExtendStyle;
    href: string;
    stroke: number;
    strokeColor: string;
    leading: number;
    lineHeight: number;
    align: string;
    valign: string;
    font: string;
    block: boolean;
    reset(): HTMLStyle;
    recover(): void;
    static create(): HTMLStyle;
    inherit(src: HTMLStyle): void;
    wordWrap: boolean;
    bold: boolean;
    italic: boolean;
    widthed(sprite: any): boolean;
    whiteSpace: string;
    width: any;
    height: any;
    heighted(sprite: any): boolean;
    size(w: number, h: number): void;
    getLineElement(): boolean;
    setLineElement(value: boolean): void;
    letterSpacing: number;
    cssText(text: string): void;
    attrs(attrs: any[]): void;
    position: string;
    readonly absolute: boolean;
    readonly paddingLeft: number;
    readonly paddingTop: number;
    static parseOneCSS(text: string, clipWord: string): any[];
}
