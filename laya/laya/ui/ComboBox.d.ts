import { UIComponent } from "./UIComponent";
import { Button } from "./Button";
import { List } from "./List";
import { VScrollBar } from "./VScrollBar";
import { Event } from "../events/Event";
import { Handler } from "../utils/Handler";
export declare class ComboBox extends UIComponent {
    protected _visibleNum: number;
    protected _button: Button;
    protected _list: List;
    protected _isOpen: boolean;
    protected _itemColors: any[];
    protected _itemSize: number;
    protected _labels: any[];
    protected _selectedIndex: number;
    protected _selectHandler: Handler;
    protected _itemHeight: number;
    protected _listHeight: number;
    protected _listChanged: boolean;
    protected _itemChanged: boolean;
    protected _scrollBarSkin: string;
    protected _isCustomList: boolean;
    itemRender: any;
    constructor(skin?: string, labels?: string);
    destroy(destroyChild?: boolean): void;
    protected createChildren(): void;
    private _createList;
    private _setListEvent;
    private onListDown;
    private onScrollBarDown;
    private onButtonMouseDown;
    skin: string;
    protected measureWidth(): number;
    protected measureHeight(): number;
    protected changeList(): void;
    protected onlistItemMouse(e: Event, index: number): void;
    private switchTo;
    protected changeOpen(): void;
    width: number;
    height: number;
    labels: string;
    protected changeItem(): void;
    selectedIndex: number;
    private changeSelected;
    selectHandler: Handler;
    selectedLabel: string;
    visibleNum: number;
    itemColors: string;
    itemSize: number;
    isOpen: boolean;
    private _onStageMouseWheel;
    protected removeList(e: Event): void;
    scrollBarSkin: string;
    sizeGrid: string;
    readonly scrollBar: VScrollBar;
    readonly button: Button;
    list: List;
    dataSource: any;
    labelColors: string;
    labelPadding: string;
    labelSize: number;
    labelBold: boolean;
    labelFont: string;
    stateNum: number;
}
