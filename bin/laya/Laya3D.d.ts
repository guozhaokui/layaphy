import { Config3D } from "./Config3D";
import { Handler } from "./laya/utils/Handler";
import { PhysicsSettings } from "./laya/d3/physics/PhysicsSettings";
export declare class Laya3D {
    static HIERARCHY: string;
    static MESH: string;
    static MATERIAL: string;
    static TEXTURE2D: string;
    static TEXTURECUBE: string;
    static ANIMATIONCLIP: string;
    static AVATAR: string;
    static TERRAINHEIGHTDATA: string;
    static TERRAINRES: string;
    private static _innerFirstLevelLoaderManager;
    private static _innerSecondLevelLoaderManager;
    private static _innerThirdLevelLoaderManager;
    private static _innerFourthLevelLoaderManager;
    private static _isInit;
    static _editerEnvironment: boolean;
    static _config: Config3D;
    static physicsSettings: PhysicsSettings;
    static readonly enbalePhysics: any;
    static _cancelLoadByUrl(url: string): void;
    private static _changeWebGLSize;
    private static __init__;
    private static enableNative3D;
    private static formatRelativePath;
    private static _endLoad;
    private static _eventLoadManagerError;
    private static _addHierarchyInnerUrls;
    private static _getSprite3DHierarchyInnerUrls;
    private static _loadHierarchy;
    private static _onHierarchylhLoaded;
    private static _onHierarchyInnerForthLevResouLoaded;
    private static _onHierarchyInnerThirdLevResouLoaded;
    private static _onHierarchyInnerSecondLevResouLoaded;
    private static _onHierarchyInnerFirstLevResouLoaded;
    private static _loadMesh;
    private static _onMeshLmLoaded;
    private static _loadMaterial;
    private static _onMaterilLmatLoaded;
    private static _onMateialTexturesLoaded;
    private static _loadAvatar;
    private static _loadAnimationClip;
    private static _loadTexture2D;
    private static _loadTextureCube;
    private static _onTextureCubeLtcLoaded;
    private static _onTextureCubeImagesLoaded;
    private static _onProcessChange;
    static init(width: number, height: number, config?: Config3D, compolete?: Handler): void;
    constructor();
}
