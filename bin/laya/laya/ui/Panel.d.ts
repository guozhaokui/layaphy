import { Box } from "./Box";
import { VScrollBar } from "./VScrollBar";
import { HScrollBar } from "./HScrollBar";
import { ScrollBar } from "./ScrollBar";
import { Node } from "../display/Node";
import { Sprite } from "../display/Sprite";
export declare class Panel extends Box {
    protected _content: Box;
    protected _vScrollBar: VScrollBar;
    protected _hScrollBar: HScrollBar;
    protected _scrollChanged: boolean;
    protected _usedCache: string;
    protected _elasticEnabled: boolean;
    constructor();
    destroy(destroyChild?: boolean): void;
    destroyChildren(): void;
    protected createChildren(): void;
    addChild(child: Node): Node;
    private onResize;
    addChildAt(child: Node, index: number): Node;
    removeChild(child: Node): Node;
    removeChildAt(index: number): Node;
    removeChildren(beginIndex?: number, endIndex?: number): Node;
    getChildAt(index: number): Node;
    getChildByName(name: string): Node;
    getChildIndex(child: Node): number;
    readonly numChildren: number;
    private changeScroll;
    protected _sizeChanged(): void;
    readonly contentWidth: number;
    readonly contentHeight: number;
    private setContentSize;
    width: number;
    height: number;
    vScrollBarSkin: string;
    hScrollBarSkin: string;
    readonly vScrollBar: ScrollBar;
    readonly hScrollBar: ScrollBar;
    readonly content: Sprite;
    protected onScrollBarChange(scrollBar: ScrollBar): void;
    scrollTo(x?: number, y?: number): void;
    refresh(): void;
    cacheAs: string;
    elasticEnabled: boolean;
    private onScrollStart;
    private onScrollEnd;
    protected _setScrollChanged(): void;
}
