import { SoundChannel } from "./SoundChannel";
import { Handler } from "../utils/Handler";
export declare class SoundManager {
    static musicVolume: number;
    static soundVolume: number;
    static playbackRate: number;
    private static _useAudioMusic;
    private static _muted;
    private static _soundMuted;
    private static _musicMuted;
    static _bgMusic: string;
    private static _musicChannel;
    private static _channels;
    private static _autoStopMusic;
    private static _blurPaused;
    private static _isActive;
    static _soundClass: new () => any;
    static _musicClass: new () => any;
    private static _lastSoundUsedTimeDic;
    private static _isCheckingDispose;
    static __init__(): boolean;
    static autoReleaseSound: boolean;
    static addChannel(channel: SoundChannel): void;
    static removeChannel(channel: SoundChannel): void;
    static disposeSoundLater(url: string): void;
    private static _checkDisposeSound;
    static disposeSoundIfNotUsed(url: string): void;
    static autoStopMusic: boolean;
    private static _visibilityChange;
    private static _stageOnBlur;
    private static _recoverWebAudio;
    private static _stageOnFocus;
    static muted: boolean;
    static soundMuted: boolean;
    static musicMuted: boolean;
    static useAudioMusic: boolean;
    static playSound(url: string, loops?: number, complete?: Handler, soundClass?: new () => any, startTime?: number): SoundChannel;
    static destroySound(url: string): void;
    static playMusic(url: string, loops?: number, complete?: Handler, startTime?: number): SoundChannel;
    static stopSound(url: string): void;
    static stopAll(): void;
    static stopAllSound(): void;
    static stopMusic(): void;
    static setSoundVolume(volume: number, url?: string): void;
    static setMusicVolume(volume: number): void;
    private static _setVolume;
}
