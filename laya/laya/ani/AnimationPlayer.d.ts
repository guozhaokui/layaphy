import { AnimationTemplet } from "./AnimationTemplet";
import { IDestroy } from "../resource/IDestroy";
import { EventDispatcher } from "../events/EventDispatcher";
export declare class AnimationPlayer extends EventDispatcher implements IDestroy {
    private _destroyed;
    private _templet;
    private _currentTime;
    private _currentFrameTime;
    private _playStart;
    private _playEnd;
    private _playDuration;
    private _overallDuration;
    private _stopWhenCircleFinish;
    private _startUpdateLoopCount;
    private _currentAnimationClipIndex;
    private _currentKeyframeIndex;
    private _paused;
    private _cacheFrameRate;
    private _cacheFrameRateInterval;
    private _cachePlayRate;
    isCache: boolean;
    playbackRate: number;
    returnToZeroStopped: boolean;
    templet: AnimationTemplet;
    readonly playStart: number;
    readonly playEnd: number;
    readonly playDuration: number;
    readonly overallDuration: number;
    readonly currentAnimationClipIndex: number;
    readonly currentKeyframeIndex: number;
    readonly currentPlayTime: number;
    readonly currentFrameTime: number;
    cachePlayRate: number;
    cacheFrameRate: number;
    currentTime: number;
    paused: boolean;
    readonly cacheFrameRateInterval: number;
    readonly state: number;
    readonly destroyed: boolean;
    constructor();
    private _computeFullKeyframeIndices;
    private _onAnimationTempletLoaded;
    private _calculatePlayDuration;
    private _setPlayParams;
    private _setPlayParamsWhenStop;
    play(index?: number, playbackRate?: number, overallDuration?: number, playStart?: number, playEnd?: number): void;
    playByFrame(index?: number, playbackRate?: number, overallDuration?: number, playStartFrame?: number, playEndFrame?: number, fpsIn3DBuilder?: number): void;
    stop(immediate?: boolean): void;
    destroy(): void;
}
