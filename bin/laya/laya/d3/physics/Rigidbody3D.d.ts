import { Component } from "../../components/Component";
import { Vector3 } from "../math/Vector3";
import { PhysicsTriggerComponent } from "./PhysicsTriggerComponent";
import { ColliderShape } from "./shape/ColliderShape";
export declare class Rigidbody3D extends PhysicsTriggerComponent {
    static TYPE_STATIC: number;
    static TYPE_DYNAMIC: number;
    static TYPE_KINEMATIC: number;
    mass: number;
    isKinematic: boolean;
    linearDamping: number;
    angularDamping: number;
    overrideGravity: boolean;
    gravity: Vector3;
    readonly totalForce: Vector3;
    linearFactor: Vector3;
    linearVelocity: Vector3;
    angularFactor: Vector3;
    angularVelocity: Vector3;
    readonly totalTorque: Vector3;
    detectCollisions: boolean;
    readonly isSleeping: boolean;
    sleepLinearVelocity: number;
    sleepAngularVelocity: number;
    constructor(collisionGroup?: number, canCollideWith?: number);
    protected _onScaleChange(scale: Vector3): void;
    _onAdded(): void;
    _onShapeChange(colShape: ColliderShape): void;
    _parse(data: any): void;
    protected _onDestroy(): void;
    _addToSimulation(): void;
    _removeFromSimulation(): void;
    _cloneTo(dest: Component): void;
    applyForce(force: Vector3, localOffset?: Vector3): void;
    applyTorque(torque: Vector3): void;
    applyImpulse(impulse: Vector3, localOffset?: Vector3): void;
    applyTorqueImpulse(torqueImpulse: Vector3): void;
    wakeUp(): void;
    clearForces(): void;
}
