import { CubePhysicsCompnent } from "./CubePhysicsCompnent";
import { CubeSphereCollider } from "./CubeSphereCollider";
import { CubeEditCubeCollider } from "./CubeEditCubeCollider";
import { PixelLineSprite3D } from "laya/d3/core/pixelLine/PixelLineSprite3D";
import { Color } from "laya/d3/math/Color";
import { Matrix4x4 } from "laya/d3/math/Matrix4x4";
import { OrientedBoundBox } from "laya/d3/math/OrientedBoundBox";
import { Vector3 } from "laya/d3/math/Vector3";
export declare class CubeBoxCollider extends CubePhysicsCompnent {
    oriBoundCenter: Vector3;
    position: Vector3;
    scale: Vector3;
    privateScale: Vector3;
    lineActive: boolean;
    private temp;
    private _vec1;
    private _vec2;
    scaleMatrix: Matrix4x4;
    private W_minx;
    private W_miny;
    private W_minz;
    private W_maxx;
    private W_maxy;
    private W_maxz;
    pixelline: PixelLineSprite3D;
    OBBWorldPointList: Vector3[];
    _orientedBoundBox: OrientedBoundBox;
    private _primitPosition;
    private _disparity;
    private tempVector;
    tempVectorPoints: Vector3[];
    onAwake(): void;
    onUpdate(): void;
    updataObbTranform(): void;
    isCollision(other: CubePhysicsCompnent): number;
    _showline(): void;
    _noShowLine(): void;
    drawBound(color?: Color): void;
    boxAndSphere(other: CubeSphereCollider): number;
    boxAndBox(other: CubeBoxCollider): number;
    boxAndCube(other: CubeEditCubeCollider): number;
    private OBBpoints;
    updataMinMax(): void;
    initmaxmin(): void;
    init2maxmin(): void;
    cubePoint: Vector3;
    OneCubeIsCollider(cubecollider: CubeEditCubeCollider, x: number, y: number, z: number): number;
    onDestroy(): void;
    onDisable(): void;
    onEnable(): void;
    clearLine(): void;
    resizeBound(): void;
}
