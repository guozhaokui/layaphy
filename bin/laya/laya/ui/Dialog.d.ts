import { View } from "./View";
import { DialogManager } from "./DialogManager";
import { UIComponent } from "./UIComponent";
import { Event } from "../events/Event";
import { Handler } from "../utils/Handler";
export declare class Dialog extends View {
    static CLOSE: string;
    static CANCEL: string;
    static SURE: string;
    static NO: string;
    static YES: string;
    static OK: string;
    private static _manager;
    static manager: DialogManager;
    closeHandler: Handler;
    popupEffect: Handler;
    closeEffect: Handler;
    group: string;
    isModal: boolean;
    isShowEffect: boolean;
    isPopupCenter: boolean;
    closeType: string;
    private _dragArea;
    constructor();
    protected _dealDragArea(): void;
    dragArea: string;
    private _onMouseDown;
    protected _onClick(e: Event): void;
    open(closeOther?: boolean, param?: any): void;
    close(type?: string): void;
    destroy(destroyChild?: boolean): void;
    show(closeOther?: boolean, showEffect?: boolean): void;
    popup(closeOther?: boolean, showEffect?: boolean): void;
    protected _open(modal: boolean, closeOther: boolean, showEffect: boolean): void;
    readonly isPopup: boolean;
    zOrder: number;
    static setLockView(view: UIComponent): void;
    static lock(value: boolean): void;
    static closeAll(): void;
    static getDialogsByGroup(group: string): any[];
    static closeByGroup(group: string): any[];
}
